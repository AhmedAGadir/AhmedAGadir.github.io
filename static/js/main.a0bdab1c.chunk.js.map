{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","button","width","fontWeight","display","h3","paragraph","circularProgress","transform","animation","props","animate","fixedBottomLeft","position","bottom","left","transition","zIndex","cursor","fixedBottomRight","right","CircularProgressWithLabel","useState","setAnimate","useEffect","setTimeout","value","classes","Box","CircularProgress","size","thickness","variant","color","top","alignItems","justifyContent","Typography","className","component","Math","round","LandingPage","Container","maxWidth","gutterBottom","href","target","rel","Button","onClick","nextPage","ProgressPage","allBooks","selectedBook","setSelectedBook","progress","setProgress","totalChapters","setTotalChapters","completedChapters","setCompletedChapters","madinahBooks","require","find","book","chapters","savedProgress","JSON","parse","localStorage","getItem","savedChapter","parseInt","updateProgress","floor","setItem","stringify","map","bookNo","marginBottom","FormControl","InputLabel","Select","native","onChange","event","label","Array","from","length","_","i","num","App","carouselIndex","setCarouselIndex","prefersDarkMode","useMediaQuery","selectTheme","darkTheme","lightTheme","createMuiTheme","palette","type","primary","main","lightBlue","secondary","amber","background","default","deepPurple","text","ThemeProvider","CssBaseline","Carousel","activeIndex","onSelect","selectedIndex","e","wrap","interval","Item","newTheme","fontSize","src","alt","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0bdab1c.chunk.js","sourcesContent":["// modularise the code\n// pulse/confetti animations\n// alert when you finish\n// save page state and selected book state and reload \n// reset each progress first === noppee\n// colour books gold when finished === noppee\n// share progress on social media - maybe\n// add a login system  \n// if youve already filled out the form then just reload the page youre on \n// deploy\n// whats next page \n// notifications on updating chapter \n// light/dark mode\n// mahas idea\n\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\n\nimport amber from '@material-ui/core/colors/amber';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport red from '@material-ui/core/colors/red';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nimport Carousel from 'react-bootstrap/Carousel'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n  },\n  button: {\n    margin: theme.spacing(1),\n    width: 150,\n    fontWeight: 'bold',\n    display: 'inline'\n  },\n  h3: {\n    fontWeight: 300\n  },\n  paragraph: {\n    margin: theme.spacing(2)\n  },\n  circularProgress: {\n    transform: 'scale(1)',\n    // transition: '0.5s ease all',\n    animation: props => props.animate ? 'pulse 1s forwards' : null\n  },\n  fixedBottomLeft: {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    // left: '50%',\n    // marginBottom: 200,\n    // transform: 'translateX(-50%)',\n    width: 40,\n    margin: 20,\n    transition: 'all 0.2s ease',\n    zIndex: 999,\n    cursor: 'pointer'\n  },\n  fixedBottomRight: {\n    position: 'fixed',\n    bottom: 0,\n    right: 0,\n    width: 40,\n    margin: 20,\n    transition: 'all 0.2s ease',\n    zIndex: 999,\n    cursor: 'pointer'\n  }\n}));\n\nfunction CircularProgressWithLabel(props) {\n\n  const [animate, setAnimate] = useState(false);\n\n  useEffect(() => {\n    setAnimate(true);\n    setTimeout(() => { setAnimate(false) }, 1200);\n  }, [props.value])\n\n  const classes = useStyles({ animate });\n\n  return (\n    <Box\n      position=\"relative\"\n      display=\"inline-flex\"\n    >\n      <CircularProgress\n        size={300}\n        thickness={2.4}\n        variant=\"determinate\"\n        color={props.value < 100 ? \"primary\" : \"secondary\"}\n        {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          className={classes.circularProgress}\n          variant=\"h5\"\n          component=\"div\"\n          // color=\"textPrimary\"\n          color={props.value < 100 ? \"primary\" : \"secondary\"}\n        >\n          {`${Math.round(props.value,)}%`}\n          <Typography variant=\"inherit\" color=\"textPrimary\"> COMPLETED</Typography>\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction LandingPage(props) {\n  const classes = useStyles();\n  return (\n    <div className=\"app-page\">\n      <Container maxWidth=\"md\">\n        <div>السلام عليكم ورحمة الله وبركاته</div>\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n          Track your progress with the <Typography variant=\"inherit\" color=\"primary\">Madinah Books</Typography>!\n        </Typography>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\" component=\"p\" paragraph>\n            A simple web app to help students of the arabic language stay motivated🙏🏾 .\n                </Typography>\n          <Typography variant=\"body1\" component=\"p\" paragraph>\n            May Allah preserve both Shaykh Dr. V Abdur Rahim for authoring these amazing books and Shaykh Asif Meherali for his gift in teaching these books.<br />\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" paragraph>\n            Some useful links:<br />\n            <a href=\"https://www.amazon.co.uk/Arabic-Course-English-Speaking-Students-complete/dp/B004NIIV9C/ref=sr_1_9?dchild=1&keywords=madinah+books&qid=1610816209&sr=8-9\" target=\"_blank\" rel=\"noreferrer\">Amazon link to buy the books</a><br />\n            LQToronto Playlist <a href=\"https://www.youtube.com/c/LearnarabicInfo/playlists\" target=\"_blank\" rel=\"noreferrer\">YouTube</a> / <a href=\"http://www.lqtoronto.com/videodlmac.html\" target=\"_blank\" rel=\"noreferrer\">lqtoronto.com</a><br />\n            <a href=\"http://www.lqtoronto.com/forums/\" target=\"_blank\" rel=\"noreferrer\">LQToronto Forum</a>\n          </Typography>\n          <Button\n            variant={'contained'}\n            className={classes.button}\n            onClick={() => setTimeout(props.nextPage, 500)}\n          >Next</Button>\n        </Container>\n      </Container>\n    </div>\n  )\n}\n\nfunction ProgressPage() {\n  const allBooks = [1, 2, 3];\n  const [selectedBook, setSelectedBook] = useState(allBooks[0]);\n\n  const [progress, setProgress] = useState(0);\n\n  const [totalChapters, setTotalChapters] = useState(0);\n  const [completedChapters, setCompletedChapters] = useState('');\n\n  const madinahBooks = require('./madinah_books.json');\n\n  useEffect(() => {\n    let totalChapters = madinahBooks.find(book => book.book === selectedBook).chapters;\n    setTotalChapters(totalChapters);\n\n    let savedProgress = JSON.parse(localStorage.getItem(`MB${selectedBook}-progress`));\n    if (savedProgress) {\n      const savedChapter = parseInt(savedProgress);\n      setCompletedChapters(savedChapter);\n      if (savedChapter === completedChapters) {\n        updateProgress();\n      }\n    } else {\n      setCompletedChapters(0);\n    }\n  }, [selectedBook]);\n\n  useEffect(() => {\n    if (completedChapters === '') {\n      return;\n    }\n    updateProgress();\n  }, [completedChapters])\n\n  const updateProgress = () => {\n    let totalChapters = madinahBooks.find(book => book.book === selectedBook).chapters;\n    setTotalChapters(totalChapters);\n\n    let progress;\n    if (!completedChapters) {\n      progress = 0;\n    } else {\n      progress = Math.floor(100 * completedChapters / totalChapters);\n    }\n    setProgress(progress);\n    localStorage.setItem(`MB${selectedBook}-progress`, JSON.stringify(completedChapters))\n  }\n\n  const handleCompletedChaptersChange = event => {\n    const completedChapters = parseInt(event.target.value);\n    setCompletedChapters(completedChapters);\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"app-page\">\n      <Box>\n        {allBooks.map(bookNo => (\n          <Button\n            key={bookNo}\n            variant={selectedBook === bookNo ? 'contained' : 'outlined'}\n            className={classes.button}\n            onClick={() => setSelectedBook(bookNo)}\n          >Book {bookNo}</Button>))\n        }\n      </Box>\n      <Box margin={2}>\n        دروس اللغة العربية\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n          Madinah Book <Typography variant=\"inherit\" color={progress < 100 ? 'primary' : 'secondary'}>{selectedBook}</Typography>\n        </Typography>\n      </Box>\n      <Box marginBottom={4}>\n        <CircularProgressWithLabel value={progress} />\n      </Box>\n      <Box>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel>Chapter</InputLabel>\n          <Select\n            native\n            value={completedChapters}\n            onChange={handleCompletedChaptersChange}\n            label={'Chapter'}>\n            {\n              [<option value=\"\" key=\"\"></option>,\n              ...Array.from({ length: totalChapters }, (_, i) => i + 1).map(num => (\n                <option value={num} key={num}>{num}</option>\n              ))]\n            }\n          </Select>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nfunction App() {\n  const [carouselIndex, setCarouselIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setCarouselIndex(selectedIndex);\n  };\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  useEffect(() => {\n    selectTheme(prefersDarkMode ? darkTheme : lightTheme)\n  }, []);\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: lightBlue[500],\n      },\n      secondary: {\n        main: amber[500]\n      },\n      background: {\n        default: '#282c34'\n      }\n    },\n  });\n\n  const lightTheme = createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: {\n        main: deepPurple['A400'],\n      },\n      secondary: {\n        main: amber['A400']\n      },\n      background: {\n        // default: 'ghostwhite'\n      },\n      text: {\n        // primary: '#282c34'\n        primary: deepPurple[900]\n      }\n    },\n  });\n\n  const [theme, selectTheme] = useState(lightTheme);\n\n  const toggleTheme = () => {\n    let newTheme = theme.palette.type === 'dark' ? lightTheme : darkTheme;\n    selectTheme(newTheme);\n  }\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Carousel\n        activeIndex={carouselIndex}\n        onSelect={handleSelect}\n        wrap={false}\n        interval={null}>\n        <Carousel.Item>\n          <LandingPage nextPage={() => setCarouselIndex(carouselIndex + 1)} />\n        </Carousel.Item>\n        <Carousel.Item>\n          <ProgressPage />\n        </Carousel.Item>\n      </Carousel>\n      <footer>\n        <Box className={classes.fixedBottomLeft} onClick={toggleTheme}>\n          {theme.palette.type === 'dark' ? <Brightness1Icon fontSize=\"large\" /> : <Brightness2Icon fontSize=\"large\" />}\n        </Box>\n        <Box className={classes.fixedBottomRight}>\n          <a\n            href=\"https://github.com/AhmedAGadir/arabic-progress-bar\"\n            target=\"_blank\">\n            <img\n              src=\"https://res.cloudinary.com/ahmedagadir/image/upload/v1530726623/product-landing-page/github-sign.svg\"\n              alt=\"GitHub repository\"\n              title=\"GitHub repository\" />\n          </a>\n        </Box>\n      </footer>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}