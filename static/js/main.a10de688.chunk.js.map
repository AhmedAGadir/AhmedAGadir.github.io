{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","button","width","fontWeight","display","h3","paragraph","CircularProgressWithLabel","props","Box","position","CircularProgress","style","height","variant","color","value","top","left","bottom","right","alignItems","justifyContent","Typography","component","Math","round","LandingPage","classes","className","Container","maxWidth","lightBlue","href","target","rel","Button","onClick","setTimeout","nextPage","ProgressPage","allBooks","useState","selectedBook","setSelectedBook","progress","setProgress","totalChapters","setTotalChapters","completedChapters","setCompletedChapters","madinahBooks","require","useEffect","find","book","chapters","savedProgress","JSON","parse","localStorage","getItem","savedChapter","parseInt","updateProgress","floor","setItem","stringify","map","bookNo","gutterBottom","amber","marginBottom","FormControl","InputLabel","Select","native","onChange","event","label","Array","from","length","_","i","num","App","carouselIndex","setCarouselIndex","darkTheme","createMuiTheme","palette","type","primary","main","secondary","ThemeProvider","Carousel","activeIndex","onSelect","selectedIndex","e","wrap","interval","Item","src","alt","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a10de688.chunk.js","sourcesContent":["// modularise the code\n// pulse/confetti animations\n// alert when you finish\n// save page state and selected book state and reload \n// reset each progress first === noppee\n// colour books gold when finished === noppee\n// share progress on social media - maybe\n// add a login system LOL \n// if youve already filled out the form then just reload the page youre on \n// deploy\n\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\n\nimport amber from '@material-ui/core/colors/amber';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nimport Carousel from 'react-bootstrap/Carousel'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n    // color: 'white'\n  },\n  button: {\n    margin: theme.spacing(1),\n    // minWidth: 120,\n    width: 150,\n    fontWeight: 'bold',\n    display: 'inline'\n  },\n  h3: {\n    fontWeight: 300\n  },\n  paragraph: {\n    margin: theme.spacing(2)\n  }\n}));\n\nfunction CircularProgressWithLabel(props) {\n  const size = 300;\n\n  return (\n    <Box\n      position=\"relative\"\n      display=\"inline-flex\"\n    >\n      <CircularProgress\n        style={{ width: size, height: size }}\n        variant=\"determinate\"\n        color={props.value < 100 ? \"primary\" : \"secondary\"}\n        {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography\n          variant=\"h5\"\n          component=\"div\"\n          // color=\"textPrimary\"\n          color={props.value < 100 ? \"primary\" : \"secondary\"}\n        >\n          {`${Math.round(props.value,)}%`}\n          <span\n            style={{\n              color: 'white'\n            }}\n          > COMPLETED</span></Typography>\n      </Box>\n    </Box>\n  );\n}\n\nfunction LandingPage(props) {\n  const classes = useStyles();\n  return (\n    <div className=\"app-page\">\n      <Container maxWidth=\"md\">\n        <div>السلام عليكم ورحمة الله وبركاته</div>\n        <Typography variant=\"h2\" component=\"h2\">\n          Track your progress with the <span style={{ color: lightBlue[500] }}>Madinah Books</span>!\n        </Typography>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\" component=\"p\" className={classes.paragraph}>\n            A simple web app to help students of the arabic language stay motivated🙏🏾 .\n                </Typography>\n          <Typography variant=\"body1\" component=\"p\" className={classes.paragraph}>\n            May Allah preserve both Shaykh Dr. V Abdur Rahim for authoring these amazing books and Shaykh Asif Meherali for his gift in teaching these books.<br />\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" className={classes.paragraph}>\n            Some useful links:<br />\n            <a href=\"https://www.amazon.co.uk/Arabic-Course-English-Speaking-Students-complete/dp/B004NIIV9C/ref=sr_1_9?dchild=1&keywords=madinah+books&qid=1610816209&sr=8-9\" target=\"_blank\" rel=\"noreferrer\">Amazon link to buy the books</a><br />\n            <a href=\"http://www.lqtoronto.com/videodlmac.html\" target=\"_blank\" rel=\"noreferrer\">LQToronto Playlist (lqtoronto.com)</a><br />\n            <a href=\"https://www.youtube.com/c/LearnarabicInfo/playlists\" target=\"_blank\" rel=\"noreferrer\">LQToronto Playlist (Youtube)</a>\n          </Typography>\n          <Button\n            variant={'contained'}\n            className={classes.button}\n            onClick={() => setTimeout(props.nextPage, 500)}\n          >Next</Button>\n        </Container>\n      </Container>\n    </div>\n  )\n}\n\nfunction ProgressPage() {\n  const allBooks = [1, 2, 3];\n  const [selectedBook, setSelectedBook] = useState(allBooks[0]);\n\n  const [progress, setProgress] = useState(0);\n\n  const [totalChapters, setTotalChapters] = useState(0);\n  const [completedChapters, setCompletedChapters] = useState('');\n\n  const madinahBooks = require('./madinah_books.json');\n\n  useEffect(() => {\n    let totalChapters = madinahBooks.find(book => book.book === selectedBook).chapters;\n    setTotalChapters(totalChapters);\n\n    let savedProgress = JSON.parse(localStorage.getItem(`MB${selectedBook}-progress`));\n    if (savedProgress) {\n      const savedChapter = parseInt(savedProgress);\n      setCompletedChapters(savedChapter);\n      if (savedChapter === completedChapters) {\n        updateProgress();\n      }\n    } else {\n      setCompletedChapters(0);\n    }\n  }, [selectedBook]);\n\n  useEffect(() => {\n    if (completedChapters === '') {\n      return;\n    }\n    updateProgress();\n  }, [completedChapters])\n\n  const updateProgress = () => {\n    let totalChapters = madinahBooks.find(book => book.book === selectedBook).chapters;\n    setTotalChapters(totalChapters);\n\n    let progress;\n    if (!completedChapters) {\n      progress = 0;\n    } else {\n      progress = Math.floor(100 * completedChapters / totalChapters);\n    }\n    setProgress(progress);\n    localStorage.setItem(`MB${selectedBook}-progress`, JSON.stringify(completedChapters))\n  }\n\n  const handleCompletedChaptersChange = event => {\n    const completedChapters = parseInt(event.target.value);\n    setCompletedChapters(completedChapters);\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"app-page\">\n      <Box>\n        {allBooks.map(bookNo => (\n          <Button\n            key={bookNo}\n            variant={selectedBook === bookNo ? 'contained' : 'outlined'}\n            className={classes.button}\n            onClick={() => setSelectedBook(bookNo)}\n          >Book {bookNo}</Button>))\n        }\n      </Box>\n      <Box margin={2}>\n        دروس اللغة العربية\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n          Madinah Book <span style={{ color: progress < 100 ? lightBlue[500] : amber[500] }}>{selectedBook}</span>\n        </Typography>\n      </Box>\n      <Box marginBottom={4}>\n        <CircularProgressWithLabel value={progress} />\n      </Box>\n      <Box>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel>Completed Chapter</InputLabel>\n          <Select\n            native\n            value={completedChapters}\n            onChange={handleCompletedChaptersChange}\n            label={'Completed Chapter'}>\n            {\n              [<option value=\"\" key=\"\"></option>,\n              ...Array.from({ length: totalChapters }, (_, i) => i + 1).map(num => (\n                <option value={num} key={num}>{num}</option>\n              ))]\n            }\n          </Select>\n        </FormControl>\n      </Box>\n    </div>\n  );\n}\n\nfunction App() {\n  const [carouselIndex, setCarouselIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setCarouselIndex(selectedIndex);\n  };\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: lightBlue[500],\n      },\n      secondary: {\n        main: amber[500]\n      }\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Carousel\n        activeIndex={carouselIndex}\n        onSelect={handleSelect}\n        wrap={false}\n        interval={null}>\n        <Carousel.Item>\n          <LandingPage nextPage={() => setCarouselIndex(carouselIndex + 1)} />\n        </Carousel.Item>\n        <Carousel.Item>\n          <ProgressPage />\n        </Carousel.Item>\n      </Carousel>\n      <a\n        href=\"https://github.com/AhmedAGadir/arabic-progress-bar\"\n        target=\"_blank\">\n        <img\n          src=\"https://res.cloudinary.com/ahmedagadir/image/upload/v1530726623/product-landing-page/github-sign.svg\"\n          alt=\"GitHub repository\"\n          title=\"GitHub repository\" />\n      </a>\n    </ThemeProvider >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}