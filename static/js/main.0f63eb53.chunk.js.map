{"version":3,"sources":["Components/CircularProgressWithLabel.js","Components/ProgressPage.js","Components/LandingPage.js","Components/MyCarousel.js","Components/GitHubLink.js","Components/HOC/withTheme.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","circularProgress","transform","animation","props","animate","CircularProgressWithLabel","useState","setAnimate","useEffect","setTimeout","value","classes","Box","position","display","CircularProgress","size","thickness","variant","color","top","left","bottom","right","alignItems","justifyContent","Typography","className","component","Math","round","formControl","margin","spacing","minWidth","button","width","fontWeight","ProgressPage","madinahBooks","require","allBooks","selectedBook","setSelectedBook","savedBook","localStorage","getItem","parseInt","completedChapters","setCompletedChapters","totalChapters","setTotalChapters","progress","setProgress","savedChapter","JSON","parse","updateTotalChapters","setItem","updateProgress","find","book","chapters","floor","stringify","map","bookNo","Button","onClick","gutterBottom","marginBottom","FormControl","InputLabel","Select","native","onChange","e","target","label","Array","from","length","_","i","num","LandingPage","Container","maxWidth","paragraph","href","rel","nextPage","carouselPage","textAlign","minHeight","flexDirection","fontSize","MyCarousel","carouselIndex","setCarouselIndex","Carousel","activeIndex","onSelect","selectedIndex","wrap","interval","pages","Page","ind","Item","fixedBottomRight","transition","zIndex","cursor","GitHubLink","src","alt","title","fixedBottomLeft","typography","h2","themeConfig","dark","palette","type","primary","main","lightBlue","secondary","amber","background","default","light","deepPurple","text","withTheme","Component","prefersDarkMode","useMediaQuery","darkTheme","createMuiTheme","lightTheme","selectedTheme","selectTheme","savedThemePreference","ThemeProvider","CssBaseline","newTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f63eb53.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    circularProgress: {\n        transform: 'scale(1)',\n        // transition: '0.5s ease all',\n        animation: props => props.animate ? 'pulse 1s forwards' : null\n    }\n}));\n\nfunction CircularProgressWithLabel(props) {\n\n    const [animate, setAnimate] = useState(false);\n\n    useEffect(() => {\n        setAnimate(true);\n        setTimeout(() => { setAnimate(false) }, 1000);\n    }, [props.value])\n\n    const classes = useStyles({ animate });\n\n    return (\n        <Box\n            position=\"relative\"\n            display=\"inline-flex\"\n        >\n            <CircularProgress\n                size={300}\n                thickness={2.4}\n                variant=\"determinate\"\n                color={props.value < 100 ? \"primary\" : \"secondary\"}\n                {...props} />\n            <Box\n                top={0}\n                left={0}\n                bottom={0}\n                right={0}\n                position=\"absolute\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <Typography\n                    className={classes.circularProgress}\n                    variant=\"h5\"\n                    component=\"div\"\n                    // color=\"textPrimary\"\n                    color={props.value < 100 ? \"primary\" : \"secondary\"}\n                >\n                    {`${Math.round(props.value,)}%`}\n                    <Typography variant=\"inherit\" color=\"textPrimary\"> COMPLETED</Typography>\n                </Typography>\n            </Box>\n        </Box>\n    );\n}\n\nexport default CircularProgressWithLabel;","\nimport React, { useState, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nimport CircularProgressWithLabel from './CircularProgressWithLabel';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 180,\n    },\n    button: {\n        margin: theme.spacing(1),\n        width: 150,\n        fontWeight: 'bold',\n        display: 'inline'\n    },\n}));\n\n\nfunction ProgressPage() {\n    const madinahBooks = require('../madinah_books.json');\n\n    const allBooks = [1, 2, 3];\n    const [selectedBook, setSelectedBook] = useState(allBooks[0]);\n\n    useEffect(() => {\n        let savedBook = localStorage.getItem('madinah-book');\n        if (savedBook) {\n            setSelectedBook(parseInt(savedBook))\n        } else {\n            setSelectedBook(allBooks[0]);\n        }\n    }, []);\n\n    const [completedChapters, setCompletedChapters] = useState('');\n    const [totalChapters, setTotalChapters] = useState(0);\n\n    const [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        let savedChapter = JSON.parse(localStorage.getItem(`MB${selectedBook}-progress`));\n        if (savedChapter) {\n            savedChapter = parseInt(savedChapter);\n            setCompletedChapters(savedChapter);\n        } else {\n            setCompletedChapters(0);\n        }\n        updateTotalChapters();\n        localStorage.setItem('madinah-book', selectedBook);\n    }, [selectedBook]);\n\n    useEffect(() => {\n        if (completedChapters === '') {\n            return;\n        }\n        updateProgress();\n    }, [completedChapters]);\n\n    const updateTotalChapters = () => {\n        let totalChapters = madinahBooks.find(book => book.book === selectedBook).chapters;\n        setTotalChapters(totalChapters);\n    }\n\n    useEffect(() => {\n        updateProgress();\n    }, [totalChapters])\n\n    const updateProgress = () => {\n        let progress;\n        if (!completedChapters) {\n            progress = 0;\n        } else {\n            progress = Math.floor(100 * completedChapters / totalChapters);\n        }\n        setProgress(progress);\n        localStorage.setItem(`MB${selectedBook}-progress`, JSON.stringify(completedChapters))\n    }\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box>\n                {allBooks.map(bookNo => (\n                    <Button\n                        key={bookNo}\n                        variant={selectedBook === bookNo ? 'contained' : 'outlined'}\n                        className={classes.button}\n                        onClick={() => setSelectedBook(bookNo)}\n                    >Book {bookNo}</Button>))\n                }\n            </Box>\n            <Box margin={2}>\n                <Typography variant=\"h4\" component=\"h4\">دروس اللغة العربية</Typography>\n                <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n                    Madinah Book <Typography variant=\"inherit\" color={progress < 100 ? 'primary' : 'secondary'}>{selectedBook}</Typography>\n                </Typography>\n            </Box>\n            <Box marginBottom={4}>\n                <CircularProgressWithLabel value={progress} />\n            </Box>\n            <Box>\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel>Chapter</InputLabel>\n                    <Select\n                        native\n                        value={completedChapters}\n                        onChange={e => setCompletedChapters(parseInt(e.target.value))}\n                        label={'Chapter'}>\n                        {\n                            [<option value=\"\" key=\"\"></option>,\n                            ...Array.from({ length: totalChapters }, (_, i) => i + 1).map(num => (\n                                <option value={num} key={num}>{num}</option>\n                            ))]\n                        }\n                    </Select>\n                </FormControl>\n            </Box>\n        </>\n    );\n}\n\n\nexport default ProgressPage;","import React, { useState, useEffect } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n        width: 150,\n        fontWeight: 'bold',\n        display: 'inline'\n    }\n}));\n\nfunction LandingPage(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <Container maxWidth=\"md\">\n                <Typography variant=\"h4\" component=\"h4\">السلام عليكم ورحمة الله وبركاته</Typography>\n                <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n                    Track your progress with the <Typography variant=\"inherit\" color=\"primary\">Madinah Books</Typography>!\n          </Typography>\n                <Container maxWidth=\"sm\">\n                    <Typography component=\"p\" paragraph>\n                        A simple web app to help students of the arabic language stay motivated🙏🏾.\n            </Typography>\n                    <Typography component=\"p\" paragraph>\n                        May Allah preserve both Shaykh Dr. V Abdur Rahim for authoring these amazing books and Shaykh Asif Meherali for his gift in teaching these books.<br />\n                    </Typography>\n                    <Typography component=\"p\" paragraph>\n                        Some useful links:<br />\n                        <a href=\"https://www.amazon.co.uk/Arabic-Course-English-Speaking-Students-complete/dp/B004NIIV9C/ref=sr_1_9?dchild=1&keywords=madinah+books&qid=1610816209&sr=8-9\" target=\"_blank\" rel=\"noreferrer\">Amazon link to buy the books</a><br />\n              LQToronto Playlist <a href=\"https://www.youtube.com/c/LearnarabicInfo/playlists\" target=\"_blank\" rel=\"noreferrer\">YouTube</a> / <a href=\"http://www.lqtoronto.com/videodlmac.html\" target=\"_blank\" rel=\"noreferrer\">lqtoronto.com</a><br />\n                        <a href=\"http://www.lqtoronto.com/forums/\" target=\"_blank\" rel=\"noreferrer\">LQToronto Forum</a>\n                    </Typography>\n                    <Button\n                        variant={'contained'}\n                        className={classes.button}\n                        onClick={() => setTimeout(props.nextPage, 500)}\n                    >Next</Button>\n                </Container>\n            </Container>\n        </>\n    )\n}\n\nexport default LandingPage;","import React, { useState, useEffect } from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Carousel from 'react-bootstrap/Carousel'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    carouselPage: {\n        textAlign: 'center',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 'calc(10px + 2vmin)'\n    }\n}));\n\n\nfunction MyCarousel(props) {\n    const [carouselIndex, setCarouselIndex] = useState(0);\n\n    const handleSelect = (selectedIndex, e) => {\n        setCarouselIndex(selectedIndex);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Carousel\n                activeIndex={carouselIndex}\n                onSelect={handleSelect}\n                wrap={false}\n                interval={null}>\n                {\n                    props.pages.map((Page, ind) => (\n                        <Carousel.Item key={ind}>\n                            <Box className={classes.carouselPage}>\n                                <Page nextPage={() => setCarouselIndex(carouselIndex + 1)} />\n                            </Box>\n                        </Carousel.Item>\n                    ))\n                }\n            </Carousel>\n        </>\n    );\n}\n\nexport default MyCarousel;","import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    fixedBottomRight: {\n        position: 'fixed',\n        bottom: 0,\n        right: 0,\n        width: 40,\n        margin: 20,\n        transition: 'all 0.2s ease',\n        zIndex: 999,\n        cursor: 'pointer'\n    },\n}));\n\nconst GitHubLink = () => {\n    const classes = useStyles();\n    return (\n        <a\n            href=\"https://github.com/AhmedAGadir/arabic-progress-bar\"\n            target=\"_blank\">\n            <img\n                className={classes.fixedBottomRight}\n                src=\"https://res.cloudinary.com/ahmedagadir/image/upload/v1530726623/product-landing-page/github-sign.svg\"\n                alt=\"GitHub repository\"\n                title=\"GitHub repository\" />\n        </a>\n    )\n}\n\nexport default GitHubLink","import React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\n\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport amber from '@material-ui/core/colors/amber';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport red from '@material-ui/core/colors/red';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    fixedBottomLeft: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        width: 40,\n        margin: 20,\n        transition: 'all 0.2s ease',\n        zIndex: 999,\n        cursor: 'pointer'\n    }\n}));\n\nconst typography = {\n    h2: {\n        fontSize: '3.75rem',\n        '@media (max-width:600px)': {\n            fontSize: '3rem',\n        }\n    }\n};\n// breakpoints: {\n//   [up('md')]: {\n//     fontSize: '2.4rem'\n//   }\n// }\n\nconst themeConfig = {\n    dark: {\n        palette: {\n            type: 'dark',\n            primary: {\n                main: lightBlue[500],\n            },\n            secondary: {\n                main: amber[500]\n            },\n            background: {\n                default: '#282c34'\n            },\n        },\n        typography\n    },\n    light: {\n        palette: {\n            type: 'light',\n            primary: {\n                main: deepPurple['A400'],\n            },\n            secondary: {\n                main: amber['A400']\n            },\n            background: {\n            },\n            text: {\n                primary: deepPurple[900]\n            },\n        },\n        typography\n    }\n}\n\nconst withTheme = Component => props => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const darkTheme = createMuiTheme(themeConfig.dark);\n    const lightTheme = createMuiTheme(themeConfig.light);\n\n    const [selectedTheme, selectTheme] = useState(lightTheme);\n\n    useEffect(() => {\n        let savedThemePreference = localStorage.getItem('madinah-web-theme');\n        if (savedThemePreference) {\n            selectTheme(savedThemePreference === 'dark' ? darkTheme : lightTheme)\n        } else {\n            selectTheme(prefersDarkMode ? darkTheme : lightTheme)\n        }\n    }, []);\n\n    const toggleTheme = () => {\n        let newTheme = selectedTheme.palette.type === 'dark' ? lightTheme : darkTheme;\n        selectTheme(newTheme);\n        localStorage.setItem('madinah-web-theme', newTheme.palette.type);\n    }\n\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={selectedTheme}>\n            <CssBaseline />\n            <Component theme={selectedTheme} {...props} />\n            <Box className={classes.fixedBottomLeft} onClick={toggleTheme}>\n                {\n                    selectedTheme.palette.type === 'dark' ?\n                        <Brightness1Icon fontSize=\"large\" /> :\n                        <Brightness2Icon fontSize=\"large\" />\n                }\n            </Box>\n        </ThemeProvider>\n    )\n}\n\nexport default withTheme;","//make percentage correspond to pages in the book ?\n\n// confetti\n// ringing sound when updating\n// animations (bitmoji?) when updating\n\n// turn it into a platform where you can login and watch the madinah videos and save your progress\n// allow users to leave comments\n\n// domain name\n// google analytics \n\n// create different services/higher order functions\n// that provide progress percentage e.g one for chapters, one for lq toronto videos, one for youtube\n// ^^ strategy pattern \n\n// localstorage for selected theme state and selected book state \n\n// modularise the code\n// pulse/confetti animations\n// alert when you finish\n// save page state and selected book state and reload \n// reset each progress first === noppee\n// colour books gold when finished === noppee\n// share progress on social media - maybe\n// add a login system  \n// if youve already filled out the form then just reload the page youre on \n// deploy\n// whats next page \n// notifications on updating chapter \n// light/dark mode\n// mahas idea\n\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\n\nimport ProgressPage from './Components/ProgressPage';\nimport LandingPage from './Components/LandingPage';\nimport MyCarousel from './Components/MyCarousel';\nimport GitHubLink from './Components/GitHubLink';\nimport withTheme from './Components/HOC/withTheme';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <>\n    <MyCarousel pages={[LandingPage, ProgressPage]} />\n    <GitHubLink />\n  </>\n)\n\nexport default withTheme(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}